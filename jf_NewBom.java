
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFDataFormat;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 31950280
 */
public class jf_NewBom extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    /**
     * Creates new form jf_NewBom
     */
    public jf_NewBom() {
        super("BOM");
        initComponents();
        //myInitComponents();
        conn=JConnection.ConnecrDb();
        Update_NewBomTable();
    }
    public void Update_NewBomTable(){
    
        try{
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, Uom, UnitRate, Quantity, Escalation from NewBom";
            pst =conn.prepareStatement(sql);
            rs=pst.executeQuery();
            table_NewBomTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        finally {
            try{
                rs.close();
                pst.close();
                //conn.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);                
            }
        }
        pnl_TextID.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_ExportExcel = new javax.swing.JButton();
        txt_Path = new javax.swing.JTextField();
        btn_OpenFile = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txt_ProjectTitle = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txt_TaxPF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_TaxED = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_TaxST = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_TaxFI = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_TaxSeT = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lbl_Totalid = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_Totalim = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_Totalsa = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cb_Radiography = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        lbl_Radiography = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cb_MPT = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        lbl_MPT = new javax.swing.JLabel();
        lbl_UFDT = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cb_UFDT = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        lbl_SR = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cb_SR = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cb_DPT = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        lbl_DPT = new javax.swing.JLabel();
        chk_TI = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        txt_Escalation = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        btn_Calculate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_NewBomTable = new javax.swing.JTable();
        pnl_TextID = new javax.swing.JPanel();
        txt_IDField = new javax.swing.JTextField();
        txt_Pipeid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_Elbowid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_Teeid = new javax.swing.JTextField();
        txt_Flangeid = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lbl_ID = new javax.swing.JLabel();
        txt_ChangeQty = new javax.swing.JTextField();
        btn_UpdateQty = new javax.swing.JButton();
        btn_DeleteSelection = new javax.swing.JButton();
        btn_Cleardata = new javax.swing.JButton();
        btn_Saveclose = new javax.swing.JButton();
        txt_ChangeUnitrate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txt_ChangeEsc = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_ChangeSpecs = new javax.swing.JTextField();
        txt_ChangeItem = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txt_ChangeSize1 = new javax.swing.JTextField();
        txt_ChangeSize2 = new javax.swing.JTextField();
        txt_ChangeRating = new javax.swing.JTextField();
        txt_ChangeSchedule = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_Selectmaterial = new javax.swing.JMenuItem();
        menu_Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_Helpdoc = new javax.swing.JMenuItem();
        menu_About = new javax.swing.JMenuItem();
        menu_Credits = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(950, 730));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_ExportExcel.setText("Generate Report->");
        btn_ExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExportExcelActionPerformed(evt);
            }
        });

        btn_OpenFile.setText("-> Open File");
        btn_OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_OpenFileActionPerformed(evt);
            }
        });

        jLabel9.setText("Project Title:");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Modify Taxes (%)"));

        jLabel10.setText("Packing & Forwarding Charges");

        txt_TaxPF.setText("2");
        txt_TaxPF.setToolTipText("");

        jLabel11.setText("Excise Duty");

        txt_TaxED.setText("12.36");

        jLabel12.setText("Sales Tax");

        txt_TaxST.setText("2");

        jLabel13.setText("Freight & Insurance");

        txt_TaxFI.setText("2");

        jLabel14.setText("Service Tax");

        txt_TaxSeT.setText("12.36");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_TaxST)
                            .addComponent(txt_TaxED)
                            .addComponent(txt_TaxPF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_TaxSeT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_TaxFI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_TaxPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_TaxED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_TaxST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_TaxFI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_TaxSeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel6.setText("Total ID");

        lbl_Totalid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Totalid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("Total IM");

        lbl_Totalim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Totalim.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Total SA");

        lbl_Totalsa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Totalsa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("Radiography");

        cb_Radiography.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10", "20", "50", "100", "120", "150", "200" }));

        jLabel17.setText("%");

        lbl_Radiography.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Radiography.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel22.setText("MP Test");

        cb_MPT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10", "20", "50", "100", "120", "150", "200" }));

        jLabel24.setText("%");

        lbl_MPT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_MPT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl_UFDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_UFDT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel25.setText("%");

        cb_UFDT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10", "20", "50", "100", "120", "150", "200" }));

        jLabel23.setText("UFD Test");
        jLabel23.setPreferredSize(new java.awt.Dimension(44, 20));

        lbl_SR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_SR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel21.setText("%");

        cb_SR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10", "20", "50", "100", "120", "150", "200" }));

        jLabel20.setText("Stress Relieving");

        jLabel16.setText("DP Test");

        cb_DPT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "10", "20", "50", "100", "120", "150", "200" }));

        jLabel18.setText("%");

        lbl_DPT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_DPT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chk_TI.setText("This is a T&I Project");
        chk_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_TIActionPerformed(evt);
            }
        });

        jLabel19.setText("Enter Escalation (%):");

        txt_Escalation.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Escalation.setText("0");
        txt_Escalation.setToolTipText("");
        txt_Escalation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_EscalationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(lbl_Totalim, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_Totalsa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(jLabel8))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(lbl_Totalid, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cb_SR, 0, 1, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(42, 42, 42)
                                        .addComponent(cb_DPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_DPT, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbl_SR, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(cb_Radiography, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addGap(10, 10, 10)
                                .addComponent(lbl_Radiography, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chk_TI, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(cb_UFDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_UFDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cb_MPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_MPT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(65, 65, 65))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_Escalation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbl_Totalsa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Totalid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Totalim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cb_Radiography, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addComponent(lbl_Radiography, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_SR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel21))
                            .addComponent(lbl_SR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(lbl_DPT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cb_DPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18))))
                                .addGap(75, 75, 75))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(chk_TI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(txt_Escalation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_MPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(lbl_MPT, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_UFDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(lbl_UFDT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Piping", jPanel6);

        jLabel30.setText("This section is under development. This item may be added manually in the BOM for estimation purposes.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Exchanger", jPanel7);

        jLabel29.setText("This section is under development. This item may be added manually in the BOM for estimation purposes.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vessel", jPanel5);

        jLabel31.setText("This section is under development. This item may be added manually in the BOM for estimation purposes.");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pump", jPanel8);

        btn_Calculate.setBackground(new java.awt.Color(51, 255, 51));
        btn_Calculate.setText("Calculate & Update in BOM");
        btn_Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_ProjectTitle)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_ExportExcel)
                        .addGap(18, 18, 18)
                        .addComponent(txt_Path, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_OpenFile)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btn_Calculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_ProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ExportExcel)
                    .addComponent(btn_OpenFile))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)), "BOM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        table_NewBomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_NewBomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_NewBomTableMouseClicked(evt);
            }
        });
        table_NewBomTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_NewBomTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_NewBomTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jLabel1.setText("Pipe ID");

        jLabel2.setText("Text ID");

        jLabel3.setText("Elbo ID");

        jLabel4.setText("Tee ID");

        jLabel5.setText("Flg ID");

        javax.swing.GroupLayout pnl_TextIDLayout = new javax.swing.GroupLayout(pnl_TextID);
        pnl_TextID.setLayout(pnl_TextIDLayout);
        pnl_TextIDLayout.setHorizontalGroup(
            pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TextIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_TextIDLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_Elbowid, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txt_Pipeid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_TextIDLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Teeid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_TextIDLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Flangeid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_TextIDLayout.setVerticalGroup(
            pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TextIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Pipeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txt_Teeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_TextIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Elbowid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txt_Flangeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Mofidy Selected Item"));

        lbl_ID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ID.setText("ID");
        lbl_ID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txt_ChangeQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_ChangeQty.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_UpdateQty.setText("Update");
        btn_UpdateQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateQtyActionPerformed(evt);
            }
        });

        btn_DeleteSelection.setText("Delete Selection");
        btn_DeleteSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteSelectionActionPerformed(evt);
            }
        });

        btn_Cleardata.setText("Clear BOM");
        btn_Cleardata.setToolTipText("Deletes all Items in the BOM");
        btn_Cleardata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CleardataActionPerformed(evt);
            }
        });

        btn_Saveclose.setText("Save & Close BOM");
        btn_Saveclose.setToolTipText("Saves the BOM for later use.");
        btn_Saveclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SavecloseActionPerformed(evt);
            }
        });

        txt_ChangeUnitrate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Unit Rate");

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Quantity");

        txt_ChangeEsc.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel28.setText("% Escalation");

        txt_ChangeSpecs.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txt_ChangeItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Specifications");

        txt_ChangeSize1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txt_ChangeSize2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txt_ChangeSize2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ChangeSize2ActionPerformed(evt);
            }
        });

        txt_ChangeRating.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txt_ChangeSchedule.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel33.setText("Item Description");

        jLabel34.setText("Size1");

        jLabel35.setText("Size2");

        jLabel36.setText("Schedule");

        jLabel37.setText("Rating");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Saveclose)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Cleardata, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165)
                        .addComponent(btn_DeleteSelection))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ChangeItem, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ChangeSize1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txt_ChangeSize2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ChangeSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ChangeRating, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ChangeSpecs, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ChangeUnitrate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel28))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txt_ChangeQty, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(txt_ChangeEsc, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_UpdateQty)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_UpdateQty)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_ID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                    .addComponent(txt_ChangeItem)
                                    .addComponent(txt_ChangeSchedule)
                                    .addComponent(txt_ChangeRating))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_ChangeQty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                    .addComponent(txt_ChangeUnitrate, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_ChangeSpecs, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_ChangeEsc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_ChangeSize2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                    .addComponent(txt_ChangeSize1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel34)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28))
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Saveclose)
                            .addComponent(btn_Cleardata)
                            .addComponent(btn_DeleteSelection))))
                .addContainerGap())
        );

        jMenu1.setText("File");

        menu_Selectmaterial.setText("Select Material");
        menu_Selectmaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_SelectmaterialActionPerformed(evt);
            }
        });
        jMenu1.add(menu_Selectmaterial);

        menu_Exit.setText("Exit");
        menu_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_ExitActionPerformed(evt);
            }
        });
        jMenu1.add(menu_Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        menu_Helpdoc.setText("Help Doc");
        menu_Helpdoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_HelpdocActionPerformed(evt);
            }
        });
        jMenu2.add(menu_Helpdoc);

        menu_About.setText("About");
        menu_About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_AboutActionPerformed(evt);
            }
        });
        jMenu2.add(menu_About);

        menu_Credits.setText("Credits");
        menu_Credits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_CreditsActionPerformed(evt);
            }
        });
        jMenu2.add(menu_Credits);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_TextID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(pnl_TextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_CleardataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CleardataActionPerformed
        int p=JOptionPane.showConfirmDialog(null,"Do you really want to delete all data?","Confirmation",JOptionPane.YES_NO_OPTION);
        if(p==0){
            try{
                String sql="delete from NewBom";
                pst =conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null,"All Data Deleted in this BOM");
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
            }
            Update_NewBomTable();
        }
    }//GEN-LAST:event_btn_CleardataActionPerformed

    private void btn_SavecloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SavecloseActionPerformed
        close();
    }//GEN-LAST:event_btn_SavecloseActionPerformed

    private void btn_ExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExportExcelActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
	int userSelection = fileChooser.showSaveDialog(this);
        //File f=fileChooser.getCurrentDirectory();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        File f=fileChooser.getSelectedFile();
        //fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        fileChooser.setAcceptAllFileFilterUsed(false);
        
        String filename=f.getAbsolutePath();
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            //File filenameindialog = new File( fileChooser.getSelectedFile( ) + ".xlsx" );
            File filenameindialog = new File( filename + ".xlsx" );
            if(filenameindialog == null)
                return;
            if(filenameindialog.exists()){
                userSelection = JOptionPane.showConfirmDialog(this,"Replace existing file?");
                // may need to check for cancel option as well
                if (userSelection == JOptionPane.NO_OPTION)
                    return;
            }
            try {
                String temp1="%PIPE%";
                String temp2="%FITTING%";
                String temp3="%FLANGES%";
                String temp4="%VALVES%";
                String temp5="%STUD-BOLTS%";
                String temp6="%GASKETS%";
                String temp7="%SMALL BORE FITTINGS%";
                String temp8="%MECHANICAL%";
                String temp9="%CIVIL%";
                String temp10="%ELECTRICAL%";
                String temp11="%INSTRUMENTATION%";
                String temp12="%INSPECTION%";
                String temp13="%INSULATION%";
                String temp14="%ELECTRICAL MATERIAL%";
                String temp15="%INSTRUMENTS%";
                
                
                
                XSSFWorkbook workbook = new XSSFWorkbook();

                //Formatting
                XSSFDataFormat format = workbook.createDataFormat();
                XSSFCellStyle style=workbook.createCellStyle();
                XSSFCellStyle style2=workbook.createCellStyle();
                XSSFCellStyle style3=workbook.createCellStyle();
                XSSFCellStyle style4=workbook.createCellStyle();
                XSSFCellStyle style5=workbook.createCellStyle();
                XSSFCellStyle style6=workbook.createCellStyle();
                XSSFCellStyle style7=workbook.createCellStyle();
                XSSFCellStyle style0=workbook.createCellStyle();
                XSSFCellStyle style1=workbook.createCellStyle();
                
                // Create a new font (Calibri 12)
                Font font = workbook.createFont();
                font.setFontHeightInPoints((short)12);
                font.setFontName("Calibri");
                font.setItalic(false);
                font.setBold(false);
                
                // Create a new font2 (Calibri Bold 12)
                Font font2 = workbook.createFont();
                font2.setFontHeightInPoints((short)12);
                font2.setFontName("Calibri");
                font2.setBold(true);
                
                // Create a new font3 (Rupee 12)
                Font font3 = workbook.createFont();
                font3.setFontHeightInPoints((short)12);
                font3.setFontName("Rupee");
                font3.setBold(false);
                
                style.setFont(font);
                style.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                style.setBorderTop(XSSFCellStyle.BORDER_THIN);
                style.setBorderRight(XSSFCellStyle.BORDER_THIN);
                style.setBorderLeft(XSSFCellStyle.BORDER_THIN);
                style.setWrapText(false);
                
                style0.setFont(font);
                style0.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                style0.setBorderTop(XSSFCellStyle.BORDER_THIN);
                style0.setAlignment(HorizontalAlignment.LEFT);
                style0.setVerticalAlignment(VerticalAlignment.CENTER);
                style0.setDataFormat(format.getFormat("0.00"));
                style0.setWrapText(false);
                
                style1.setFont(font);
                style1.setAlignment(HorizontalAlignment.RIGHT);
                style1.setVerticalAlignment(VerticalAlignment.CENTER);
                style1.setWrapText(false);
                
                style2.setDataFormat(format.getFormat("0.00"));
                style2.setFont(font);
                style2.setWrapText(false);
                style2.setAlignment(HorizontalAlignment.LEFT);
                style2.setVerticalAlignment(VerticalAlignment.CENTER);
                
                style3.setFont(font);
                style3.setAlignment(HorizontalAlignment.LEFT);
                style3.setVerticalAlignment(VerticalAlignment.CENTER);
                style3.setWrapText(false);
                
                style4.setFont(font2);
                style4.setBorderBottom(XSSFCellStyle.BORDER_THIN);
                style4.setBorderTop(XSSFCellStyle.BORDER_THIN);
                style4.setAlignment(HorizontalAlignment.CENTER);
                style4.setVerticalAlignment(VerticalAlignment.CENTER);
                style4.setWrapText(false);
                
                style5.setFont(font2);
                style5.setAlignment(HorizontalAlignment.CENTER);
                style5.setVerticalAlignment(VerticalAlignment.CENTER);
                style5.setWrapText(false);
                
                style6.setFont(font3);
                style6.setAlignment(HorizontalAlignment.CENTER);
                style6.setVerticalAlignment(VerticalAlignment.CENTER);
                style6.setWrapText(false);
                
                style7.setFont(font2);
                style7.setAlignment(HorizontalAlignment.LEFT);
                style7.setVerticalAlignment(VerticalAlignment.CENTER);
                style7.setWrapText(false);
                //End of Formatting
                
                //Sheet for Material Cost
                String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, Quantity, Escalation from NewBom Where Type like'"+temp1+"' OR Type like'"+temp2+"' OR Type like'"+temp3+"' OR Type like'"+temp4+"' OR Type like'"+temp5+"' OR Type like'"+temp6+"' OR Type like'"+temp7+"' OR Type like'"+temp14+"' OR Type like'"+temp15+"'";
                pst =conn.prepareStatement(sql);
                rs=pst.executeQuery();
                
                XSSFSheet sheet2;
                XSSFRow row;
                XSSFCell cell;
                sheet2 = workbook.createSheet("Material Cost");
                row=sheet2.createRow(0);
                cell=row.createCell(0);
                cell.setCellValue("ID");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("TYPE");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellValue("ITEM");
                cell.setCellStyle(style);
                cell=row.createCell(3);
                cell.setCellValue("SIZE1(ID)");
                cell=row.createCell(4);
                cell.setCellValue("SIZE2");
                cell.setCellStyle(style);
                cell=row.createCell(5);
                cell.setCellValue("SCHEDULE");
                cell.setCellStyle(style);
                cell=row.createCell(6);
                cell.setCellValue("RATING");
                cell.setCellStyle(style);
                cell=row.createCell(7);
                cell.setCellValue("SPECIFICATIONS");
                cell.setCellStyle(style);
                cell=row.createCell(8);
                cell.setCellValue("REFERENCE");
                cell.setCellStyle(style);
                cell=row.createCell(9);
                cell.setCellValue("PO DATE");
                cell.setCellStyle(style);
                cell=row.createCell(10);
                cell.setCellValue("LINE#");
                cell.setCellStyle(style);
                cell=row.createCell(11);
                cell.setCellValue("UOM");
                cell.setCellStyle(style);
                cell=row.createCell(12);
                cell.setCellValue("UNIT RATE");
                cell.setCellStyle(style);
                cell=row.createCell(13);
                cell.setCellValue("QUANTITY");
                cell.setCellStyle(style);
                cell=row.createCell(14);
                cell.setCellValue("ESCALATION");
                cell.setCellStyle(style);
                cell=row.createCell(15);
                cell.setCellValue("TOTAL");
                cell.setCellStyle(style);
                int i=1;
                while(rs.next()){
                    row=sheet2.createRow(i);
                    cell=row.createCell(0);
                    cell.setCellValue(rs.getInt("ID"));
                    cell.setCellStyle(style);
                    cell=row.createCell(1);
                    cell.setCellValue(rs.getString("Type"));
                    cell.setCellStyle(style);
                    cell=row.createCell(2);
                    cell.setCellValue(rs.getString("Item"));
                    cell.setCellStyle(style);
                    cell=row.createCell(3);
                    cell.setCellValue(rs.getString("Size1"));
                    cell.setCellStyle(style);
                    cell=row.createCell(4);
                    cell.setCellValue(rs.getString("Size2"));
                    cell.setCellStyle(style);
                    cell=row.createCell(5);
                    cell.setCellValue(rs.getString("Schedule"));
                    cell.setCellStyle(style);
                    cell=row.createCell(6);
                    cell.setCellValue(rs.getString("Rating"));
                    cell.setCellStyle(style);
                    cell=row.createCell(7);
                    cell.setCellValue(rs.getString("Specifications"));
                    cell.setCellStyle(style);
                    cell=row.createCell(8);
                    cell.setCellValue(rs.getString("Reference"));
                    cell.setCellStyle(style);
                    cell=row.createCell(9);
                    cell.setCellValue(rs.getString("RefDate"));
                    cell.setCellStyle(style);
                    cell=row.createCell(10);
                    cell.setCellValue(rs.getString("RefLine"));
                    cell.setCellStyle(style);
                    cell=row.createCell(11);
                    cell.setCellValue(rs.getString("Uom"));
                    cell.setCellStyle(style);
                    cell=row.createCell(12);
                    cell.setCellValue(rs.getInt("UnitRate"));
                    cell.setCellStyle(style);
                    cell=row.createCell(13);
                    cell.setCellValue(rs.getInt("Quantity"));
                    cell.setCellStyle(style);
                    cell=row.createCell(14);
                    cell.setCellValue(rs.getInt("Escalation"));
                    cell.setCellStyle(style);
                    cell=row.createCell(15);
                    cell.setCellFormula("M"+(i+1)+"*N"+(i+1)+"+M"+(i+1)+"*N"+(i+1)+"*O"+(i+1)+"/100");
                    cell.setCellStyle(style);
                    i++;
                }
                row=sheet2.createRow(sheet2.getLastRowNum()+1);
                cell=row.createCell(15);
                cell.setCellFormula("sum(P2:P"+(short)sheet2.getLastRowNum()+")");
                cell.setCellStyle(style2);
                for(int x = 0; x < 17; x = x+1) {
                    sheet2.autoSizeColumn(x); //adjust width of the columns
                }
                //End of Sheet for Material Cost
                
                //Sheet for Execution Cost
                String sql2 = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, Quantity, Escalation from NewBom Where Type like'"+temp8+"' OR Type like'"+temp9+"' OR Type like'"+temp10+"' OR Type like'"+temp11+"' OR Type like'"+temp12+"' OR Type like'"+temp13+"'";
                pst =conn.prepareStatement(sql2);
                rs=pst.executeQuery();
                XSSFSheet sheet1 = workbook.createSheet("Execution Cost");
                //XSSFRow row=sheet1.createRow(0);
                row=sheet1.createRow(0);
                //XSSFCell cell1;
                
                cell=row.createCell(0);
                cell.setCellValue("ID");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("TYPE");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellValue("ITEM");
                cell.setCellStyle(style);
                cell=row.createCell(3);
                cell.setCellValue("SIZE1(ID)");
                cell=row.createCell(4);
                cell.setCellValue("SIZE2");
                cell.setCellStyle(style);
                cell=row.createCell(5);
                cell.setCellValue("SCHEDULE");
                cell.setCellStyle(style);
                cell=row.createCell(6);
                cell.setCellValue("RATING");
                cell.setCellStyle(style);
                cell=row.createCell(7);
                cell.setCellValue("SPECIFICATIONS");
                cell.setCellStyle(style);
                cell=row.createCell(8);
                cell.setCellValue("REFERENCE");
                cell.setCellStyle(style);
                cell=row.createCell(9);
                cell.setCellValue("PO DATE");
                cell.setCellStyle(style);
                cell=row.createCell(10);
                cell.setCellValue("LINE#");
                cell.setCellStyle(style);
                cell=row.createCell(11);
                cell.setCellValue("UOM");
                cell.setCellStyle(style);
                cell=row.createCell(12);
                cell.setCellValue("UNIT RATE");
                cell.setCellStyle(style);
                cell=row.createCell(13);
                cell.setCellValue("QUANTITY");
                cell.setCellStyle(style);
                cell=row.createCell(14);
                cell.setCellValue("ESCALATION");
                cell.setCellStyle(style);
                cell=row.createCell(15);
                cell.setCellValue("TOTAL");
                cell.setCellStyle(style);
                i=1;
                while(rs.next()){
                    row=sheet1.createRow(i);
                    cell=row.createCell(0);
                    cell.setCellValue(rs.getInt("ID"));
                    cell.setCellStyle(style);
                    cell=row.createCell(1);
                    cell.setCellValue(rs.getString("Type"));
                    cell.setCellStyle(style);
                    cell=row.createCell(2);
                    cell.setCellValue(rs.getString("Item"));
                    cell.setCellStyle(style);
                    cell=row.createCell(3);
                    cell.setCellValue(rs.getString("Size1"));
                    cell.setCellStyle(style);
                    cell=row.createCell(4);
                    cell.setCellValue(rs.getString("Size2"));
                    cell.setCellStyle(style);
                    cell=row.createCell(5);
                    cell.setCellValue(rs.getString("Schedule"));
                    cell.setCellStyle(style);
                    cell=row.createCell(6);
                    cell.setCellValue(rs.getString("Rating"));
                    cell.setCellStyle(style);
                    cell=row.createCell(7);
                    cell.setCellValue(rs.getString("Specifications"));
                    cell.setCellStyle(style);
                    cell=row.createCell(8);
                    cell.setCellValue(rs.getString("Reference"));
                    cell.setCellStyle(style);
                    cell=row.createCell(9);
                    cell.setCellValue(rs.getString("RefDate"));
                    cell.setCellStyle(style);
                    cell=row.createCell(10);
                    cell.setCellValue(rs.getString("RefLine"));
                    cell.setCellStyle(style);
                    cell=row.createCell(11);
                    cell.setCellValue(rs.getString("Uom"));
                    cell.setCellStyle(style);
                    cell=row.createCell(12);
                    cell.setCellValue(rs.getInt("UnitRate"));
                    cell.setCellStyle(style);
                    cell=row.createCell(13);
                    cell.setCellValue(rs.getInt("Quantity"));
                    cell.setCellStyle(style);
                    cell=row.createCell(14);
                    cell.setCellValue(rs.getInt("Escalation"));
                    cell.setCellStyle(style);
                    cell=row.createCell(15);
                    cell.setCellFormula("M"+(i+1)+"*N"+(i+1)+"+M"+(i+1)+"*N"+(i+1)+"*O"+(i+1)+"/100");
                    cell.setCellStyle(style);
                    i++;
                }
                row=sheet1.createRow(sheet1.getLastRowNum()+1);
                cell=row.createCell(15);
                cell.setCellFormula("sum(P2:P"+(short)sheet1.getLastRowNum()+")");
                cell.setCellStyle(style2);
                
                for(int x = 0; x < 17; x = x+1) {
                    sheet1.autoSizeColumn(x); //adjust width of the columns
                }
                rs.close();
                //End of Sheet for Execution Cost
                
                //Sheet for Breakup
                XSSFSheet sheet3 = workbook.createSheet("Breakup");
                
                row=sheet3.createRow(0);
                cell=row.createCell(0);
                cell.setCellValue("SL");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("TYPE");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellValue("TOTAL COST");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(1);
                cell=row.createCell(0);
                cell.setCellValue("");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("MATERIAL");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellValue("");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(2);
                cell=row.createCell(0);
                cell.setCellValue("1");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("PIPES");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B3)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(3);
                cell=row.createCell(0);
                cell.setCellValue("2");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("VALVES");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B4)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(4);
                cell=row.createCell(0);
                cell.setCellValue("3");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("FITTINGS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B5)+SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,\"SMALL BORE FITTINGS\")");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(5);
                cell=row.createCell(0);
                cell.setCellValue("4");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("FLANGES");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B6)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(6);
                cell=row.createCell(0);
                cell.setCellValue("5");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("STUD-BOLTS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B7)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(7);
                cell=row.createCell(0);
                cell.setCellValue("6");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("GASKETS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B8)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(8);
                cell=row.createCell(0);
                cell.setCellValue("7");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("VESSELS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B9)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(9);
                cell=row.createCell(0);
                cell.setCellValue("8");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("PUMPS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B10)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(10);
                cell=row.createCell(0);
                cell.setCellValue("9");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("EXCHANGERS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B11)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(11);
                cell=row.createCell(0);
                cell.setCellValue("10");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("ELECTRICAL MATERIAL");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B12)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(12);
                cell=row.createCell(0);
                cell.setCellValue("11");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("INSTRUMENTS");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Material Cost'!P:P,'Material Cost'!B:B,B13)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(13);
                cell=row.createCell(0);
                cell.setCellValue("");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("EXECUTION");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellValue("");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(14);
                cell=row.createCell(0);
                cell.setCellValue("1");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("MECHANICAL");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Execution Cost'!P:P,'Execution Cost'!B:B,B15)");
                cell.setCellStyle(style);

                row=sheet3.createRow(15);
                cell=row.createCell(0);
                cell.setCellValue("2");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("CIVIL");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Execution Cost'!P:P,'Execution Cost'!B:B,B16)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(16);
                cell=row.createCell(0);
                cell.setCellValue("3");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("ELECTRICAL");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Execution Cost'!P:P,'Execution Cost'!B:B,B17)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(17);
                cell=row.createCell(0);
                cell.setCellValue("4");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("INSTRUMENTATION");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUMIFS('Execution Cost'!P:P,'Execution Cost'!B:B,B18)");
                cell.setCellStyle(style);
                
                row=sheet3.createRow(18);
                cell=row.createCell(0);
                cell.setCellValue("");
                cell.setCellStyle(style);
                cell=row.createCell(1);
                cell.setCellValue("TOTAL BASIC COST");
                cell.setCellStyle(style);
                cell=row.createCell(2);
                cell.setCellFormula("SUM(C2:C18)");
                cell.setCellStyle(style);
                
                for(int x = 0; x < 4; x = x+1) {
                    sheet3.autoSizeColumn(x); //adjust width of the columns
                }
                //End of Sheet for Breakup
                
                //Sheet for Total Cost
                XSSFSheet sheet0;
                sheet0 = workbook.createSheet("Estimated Cost");
                row=sheet0.createRow(0);
                cell=row.createCell(0);
                cell.setCellValue("Title: "+txt_ProjectTitle.getText());
                cell.setCellStyle(style5);
                
                cell=row.createCell(10);
                cell.setCellValue(txt_Escalation.getText());
                
                sheet0.setColumnHidden(10,true);
                
                sheet0.addMergedRegion(new CellRangeAddress(
                    0, //first row (0-based)
                    0, //last row  (0-based)
                    0, //first column (0-based)
                    7  //last column  (0-based)
                ));
                
                row=sheet0.createRow(2);
                cell=row.createCell(0);
                cell.setCellValue("COST ESTIMATE");
                cell.setCellStyle(style5);
                
                sheet0.addMergedRegion(new CellRangeAddress(
                    2, //first row (0-based)
                    2, //last row  (0-based)
                    0, //first column (0-based)
                    7  //last column  (0-based)
                ));
                
                row=sheet0.createRow(3);
                cell=row.createCell(3);
                cell.setCellValue("All values in");
                cell.setCellStyle(style2);
                cell=row.createCell(6);
                cell.setCellValue("r");
                cell.setCellStyle(style6);
                cell=row.createCell(7);
                cell.setCellValue("Lakhs");
                cell.setCellStyle(style2);
                
                sheet0.addMergedRegion(new CellRangeAddress(
                    3, //first row (0-based)
                    3, //last row  (0-based)
                    3, //first column (0-based)
                    5  //last column  (0-based)
                ));
                row=sheet0.createRow(4);
                cell=row.createCell(0);
                cell.setCellValue("SL");
                cell.setCellStyle(style4);
                cell=row.createCell(1);
                cell.setCellValue("ITEM DESCRIPTION");
                cell.setCellStyle(style4);
                cell=row.createCell(2);
                cell.setCellStyle(style4);
                cell=row.createCell(3);
                cell.setCellStyle(style4);
                cell=row.createCell(4);
                cell.setCellStyle(style4);
                cell=row.createCell(5);
                cell.setCellStyle(style4);
                cell=row.createCell(6);
                cell.setCellStyle(style4);
                cell=row.createCell(7);
                cell.setCellValue("AMOUNT");
                cell.setCellStyle(style4);
                
                row=sheet0.createRow(6);
                cell=row.createCell(0);
                cell.setCellValue("(A)");
                cell.setCellStyle(style3);
                cell=row.createCell(1);
                cell.setCellValue("TOTAL MATERIAL COST [(I) + (II)]");
                cell.setCellStyle(style3);
                cell=row.createCell(7);
                cell.setCellFormula("Sum(G9:G20)");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(8);
                cell=row.createCell(0);
                cell.setCellValue("(I)");
                cell.setCellStyle(style1);
                cell=row.createCell(1);
                cell.setCellValue("BASIC MATERIAL COST");
                cell.setCellStyle(style3);
                cell=row.createCell(6);
                cell.setCellFormula("sum(F10:F14)");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(9);
                cell=row.createCell(1);
                cell.setCellValue("PIPING");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(SUM(Breakup!C3:C8)+SUM(Breakup!C3:C8)*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(10);
                cell=row.createCell(1);
                cell.setCellValue("VESSELS");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C9+Breakup!C9*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(11);
                cell=row.createCell(1);
                cell.setCellValue("PUMPS");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C10+Breakup!C10*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(12);
                cell=row.createCell(1);
                cell.setCellValue("EXCHANGERS");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C11+Breakup!C11*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(13);
                cell=row.createCell(1);
                cell.setCellValue("ELECTRICAL MATERIAL (INCLUDING CABLES)");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C12+Breakup!C12*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(14);
                cell=row.createCell(1);
                cell.setCellValue("INSTRUMENTS");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C13+Breakup!C13*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(16);
                cell=row.createCell(0);
                cell.setCellValue("(II)");
                cell.setCellStyle(style1);
                cell=row.createCell(1);
                cell.setCellValue("TAXES ON MATERIAL SUPPLY");
                cell.setCellStyle(style3);
                cell=row.createCell(6);
                cell.setCellFormula("Sum(F18:F21)");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(17);
                cell=row.createCell(1);
                cell.setCellValue("Packing & Forwarding Charges");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue(txt_TaxPF.getText());
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("D18*G9/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(18);
                cell=row.createCell(1);
                cell.setCellValue("Excise Duty");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue(txt_TaxED.getText());
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("D19*(G9+F18)/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(19);
                cell=row.createCell(1);
                cell.setCellValue("Sales Tax");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue(txt_TaxST.getText());
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("D20*(G9+F18+F19)/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(20);
                cell=row.createCell(1);
                cell.setCellValue("Freight & Insurance");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue(txt_TaxFI.getText());
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("D21*G9/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(22);
                cell=row.createCell(0);
                cell.setCellValue("(B)");
                cell.setCellStyle(style3);
                cell=row.createCell(1);
                cell.setCellValue("TOTAL EXECUTION COST");
                cell.setCellStyle(style3);
                cell=row.createCell(7);
                cell.setCellFormula("Sum(F24:F28)");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(23);
                cell=row.createCell(1);
                cell.setCellValue("MECHANICAL");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C15+Breakup!C15*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(24);
                cell=row.createCell(1);
                cell.setCellValue("CIVIL");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C16+Breakup!C16*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(25);
                cell=row.createCell(1);
                cell.setCellValue("ELECTRICAL");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C17+Breakup!C17*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(26);
                cell=row.createCell(1);
                cell.setCellValue("INSTRUMENTATION");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("(Breakup!C18+Breakup!C18*K1*0.01)/100000");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(27);
                cell=row.createCell(1);
                cell.setCellValue("Service Tax & Education Cess on Execution");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue(txt_TaxSeT.getText());
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(5);
                cell.setCellFormula("D28*SUM(F24:F27)/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(29);
                cell=row.createCell(1);
                cell.setCellValue("CONTINGENCY");
                cell=row.createCell(2);
                cell.setCellValue("@");
                cell=row.createCell(3);
                cell.setCellValue("5");
                cell.setCellStyle(style2);
                cell=row.createCell(4);
                cell.setCellValue("%");
                cell.setCellStyle(style3);
                cell=row.createCell(7);
                cell.setCellFormula("SUM(H7:H28)*D30/100");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(32);
                cell=row.createCell(0);
                cell.setCellValue("SL");
                cell.setCellStyle(style4);
                cell=row.createCell(1);
                cell.setCellValue("TOTAL");
                cell.setCellStyle(style4);
                cell=row.createCell(2);
                cell.setCellStyle(style4);
                cell=row.createCell(3);
                cell.setCellStyle(style4);
                cell=row.createCell(4);
                cell.setCellStyle(style4);
                cell=row.createCell(5);
                cell.setCellStyle(style4);
                cell=row.createCell(6);
                cell.setCellStyle(style4);
                cell=row.createCell(7);
                cell.setCellFormula("SUM(H7:H31)");
                cell.setCellStyle(style0);
                
                row=sheet0.createRow(33);
                cell=row.createCell(6);
                cell.setCellValue("Say ");
                cell.setCellStyle(style5);
                cell=row.createCell(7);
                cell.setCellFormula("IF(MOD(H33,1)=0,H33,IF(H33<100,IF(H33>10,H33-MOD(H33,1)+1,H33),H33-MOD(H33,10)+10))");
                cell.setCellStyle(style2);
                
                row=sheet0.createRow(34);
                cell=row.createCell(0);
                cell.setCellValue("Note:");
                cell.setCellStyle(style7);
                
                row=sheet0.createRow(35);
                cell=row.createCell(0);
                cell.setCellValue("1. The estimate for piping and execution is based on the unit rates given in the existing SOs and AMCs.");
                cell.setCellStyle(style7);
                
                if(tni_indicator==1){
                    row=sheet0.createRow(36);
                    cell=row.createCell(0);
                    cell.setCellValue("2. Outage is required for tie-in, installation and commissioning.");
                    cell.setCellStyle(style7);
                }
                
                
                sheet0.setColumnWidth(0, 1600);
                for(int x = 1; x < 8; x = x+1) {
                    sheet0.autoSizeColumn(x); //adjust width of the columns
                }
                //End of Sheet for Total Cost
                
                workbook.setSheetOrder("Estimated Cost",0);
                workbook.setSheetOrder("Breakup",1);
                workbook.setSheetOrder("Material Cost",2);
                workbook.setSheetOrder("Execution Cost",3);
                
                FileOutputStream out;
                out=new FileOutputStream(filenameindialog);
                workbook.write(out);
                out.close();
                txt_Path.setText(filenameindialog.toString());
                
                //System.out.println("exceldatabase.xlsx written successfully");
            } catch (SQLException ex) {
                Logger.getLogger(jf_NewBom.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(jf_NewBom.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_ExportExcelActionPerformed

    private void table_NewBomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_NewBomTableMouseClicked
        try{
            int row = table_NewBomTable.getSelectedRow();
            String Table_Click=(table_NewBomTable.getModel().getValueAt(row, 0).toString());
            String sql="select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, Quantity, Escalation from NewBom where ID='"+Table_Click+"' ";            
            pst =conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                    String add1=rs.getString("ID");
                    txt_IDField.setText(add1);
                    lbl_ID.setText(add1);
                    String add2=rs.getString("Item");
                    txt_ChangeItem.setText(add2);
                    String add3=rs.getString("Size1");
                    txt_ChangeSize1.setText(add3);
                    String add4=rs.getString("Size2");
                    txt_ChangeSize2.setText(add4);
                    String add5=rs.getString("Schedule");
                    txt_ChangeSchedule.setText(add5);
                    String add6=rs.getString("Rating");
                    txt_ChangeRating.setText(add6);
                    String add7=rs.getString("Specifications");
                    txt_ChangeSpecs.setText(add7);
                    String add8=rs.getString("Quantity");
                    txt_ChangeQty.setText(add8);
                    String add9=rs.getString("UnitRate");
                    txt_ChangeUnitrate.setText(add9);
                    String add10=rs.getString("Escalation");
                    txt_ChangeEsc.setText(add10);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        finally {
            try{
                rs.close();
                pst.close();
                //conn.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);                
            }
        }
    }//GEN-LAST:event_table_NewBomTableMouseClicked

    private void table_NewBomTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_NewBomTableKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_DOWN ||evt.getKeyCode()==KeyEvent.VK_UP){
           
            try{
                int row = table_NewBomTable.getSelectedRow();
                String Table_Click=(table_NewBomTable.getModel().getValueAt(row, 0).toString());
                String sql="select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, Quantity, Escalation from NewBom where ID='"+Table_Click+"' ";            
                pst =conn.prepareStatement(sql);
                rs=pst.executeQuery();
            
                if(rs.next()){
                    String add1=rs.getString("ID");
                    txt_IDField.setText(add1);
                    lbl_ID.setText(add1);
                    String add2=rs.getString("Item");
                    txt_ChangeItem.setText(add2);
                    String add3=rs.getString("Size1");
                    txt_ChangeSize1.setText(add3);
                    String add4=rs.getString("Size2");
                    txt_ChangeSize2.setText(add4);
                    String add5=rs.getString("Schedule");
                    txt_ChangeSchedule.setText(add5);
                    String add6=rs.getString("Rating");
                    txt_ChangeRating.setText(add6);
                    String add7=rs.getString("Specifications");
                    txt_ChangeSpecs.setText(add7);
                    String add8=rs.getString("Quantity");
                    txt_ChangeQty.setText(add8);
                    String add9=rs.getString("UnitRate");
                    txt_ChangeUnitrate.setText(add9);
                    String add10=rs.getString("Escalation");
                    txt_ChangeEsc.setText(add10);
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
            }
        }
    }//GEN-LAST:event_table_NewBomTableKeyReleased

    private void btn_OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_OpenFileActionPerformed
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+txt_Path.getText().toString());
        } catch (IOException ex) {
            Logger.getLogger(jf_NewBom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_OpenFileActionPerformed

    private void menu_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_ExitActionPerformed
        close();
    }//GEN-LAST:event_menu_ExitActionPerformed

    private void menu_SelectmaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_SelectmaterialActionPerformed
        jf_Estimator estimator = new jf_Estimator();
        //estimator.close();
        estimator.setVisible(true);
        close();
    }//GEN-LAST:event_menu_SelectmaterialActionPerformed

    private void menu_AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_AboutActionPerformed
        jf_About about = new jf_About();
        about.setVisible(true);
    }//GEN-LAST:event_menu_AboutActionPerformed

    private void menu_HelpdocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_HelpdocActionPerformed
        try{
           Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\31950280\\Documents\\NetBeansProjects\\Estimation\\resources\\help.pdf");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_menu_HelpdocActionPerformed

    private void menu_CreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_CreditsActionPerformed
        jf_Credits credits = new jf_Credits();
        credits.setVisible(true);
    }//GEN-LAST:event_menu_CreditsActionPerformed

    private void btn_DeleteSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteSelectionActionPerformed
        int p=JOptionPane.showConfirmDialog(null,"Do you really want to delete this Item?","Confirmation",JOptionPane.YES_NO_OPTION);
        if(p==0){
            String sql="delete from NewBom where ID=?";
            try{
            
                pst =conn.prepareStatement(sql);
                pst.setString(1, txt_IDField.getText());
                pst.execute();
            
                JOptionPane.showMessageDialog(null,"Data Deleted");
            
            }
        
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
            Update_NewBomTable();
        }
    }//GEN-LAST:event_btn_DeleteSelectionActionPerformed

    private void btn_CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalculateActionPerformed
        try{
            
            int sumid0=0, sumid1=0, sumid2=0, sumid3=0, sumid4=0, sumid5=0, sumid6=0, sumid7=0, sumid8=0, sumid9=0, sumid10=0, sumid11=0;
            int sumim0=0, sumim1=0, sumim2=0, sumim3=0, sumim4=0, sumim5=0, sumim6=0, sumim7=0, sumim8=0, sumim9=0, sumim10=0, sumim11=0;
            int sumsa0=0, sumsa1=0, sumsa2=0, sumsa3=0, sumsa4=0, sumsa5=0, sumsa6=0, sumsa7=0, sumsa8=0, sumsa9=0, sumsa10=0, sumsa11=0;
            String temp0="%PIPE%";
            String temp1="%SOFF%";
            String temp2="%SORF%";
            String temp3="%WNRF%";
            String temp4="%NIPPLE%"; //WITH PBE
            String temp5="%VALVE%"; //WITH SW
            String temp6="%CAP%";
            String temp7="%TEE%";
            String temp8="%COUPLING%"; //WITH SW
            String temp9="%UNION%";  //WITH SW
            String temp10="%REDUCER%";
            String temp11="%ELBOW%";
            String tempa="%SW%";
            String tempb="%PBE%";
            
            //pipe
            String sql0="Select sum(Quantity*Size1/6),sum(Quantity*Size1), sum(3.1416*OD*Quantity/1000) From NewBom Where Item Like '"+temp0+"' ";
            pst=conn.prepareStatement(sql0);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for pipes");
            } else {
                sumid0=rs.getInt("sum(Quantity*Size1/6)");
                sumim0=rs.getInt("sum(Quantity*Size1)");
                sumsa0=rs.getInt("sum(3.1416*OD*Quantity/1000)");
            }
            //if(rs.next()){
            //    sumid0=rs.getInt("sum(Quantity*Size1/6)");
            //    sumim0=rs.getInt("sum(Quantity*Size1)");
            //    sumsa0=rs.getInt("sum(3.1416*OD*Quantity/1000)");
            //    }
            rs.close();
            
            //soff
            String sql1="Select sum(Quantity*Size1) From NewBom where Item Like '"+temp1+"' ";
            pst=conn.prepareStatement(sql1);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for soff flanges");
            } else {
                sumid1=rs.getInt("sum(Quantity*Size1)");
                sumim1=0;
                sumsa1=0;
            }
            //if(rs.next()){
            //    sumid1=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim1=0;
            //    sumsa1=0;
            //}
            rs.close();
            
            //sorf
            String sql2="Select sum(Quantity*Size1) From NewBom where Item Like '"+temp2+"' ";
            pst=conn.prepareStatement(sql2);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for sorf flanges");
            } else {
                sumid2=rs.getInt("sum(Quantity*Size1)");
                sumim2=0;
                sumsa2=0;
            }
            //if(rs.next()){
            //    sumid2=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim2=0;
            //    sumsa2=0;
            //}
            rs.close();
            
            //wnrf
            String sql3="Select sum(Quantity*Size1), sum(3.1416*OD*Quantity/10000) From NewBom where Item Like '"+temp3+"'";
            pst=conn.prepareStatement(sql3);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for wnrf flanges");
            } else {
                sumid3=rs.getInt("sum(Quantity*Size1)");
                sumim3=0;
                sumsa3=rs.getInt("sum(3.1416*OD*Quantity/10000)");
            }
            //if(rs.next()){
            //    sumid3=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim3=0;
            //    sumsa3=rs.getInt("sum(3.1416*OD*Quantity/10000)");
            //}
            rs.close();
            
            //nipple
            String sql4="Select sum(Quantity*Size1*2),sum(Quantity*Size1*Size2/1000), sum(3.1416*OD*Quantity*Size2/1000000) From NewBom Where Item Like '"+temp4+"' And Item Like '"+tempb+"'";
            pst=conn.prepareStatement(sql4);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for nipples");
            } else {
                sumid4=rs.getInt("sum(Quantity*Size1*2)");
                sumim4=rs.getInt("sum(Quantity*Size1*Size2/1000)");
                sumsa4=rs.getInt("sum(3.1416*OD*Quantity*Size2/1000000)");
            }
            //if(rs.next()){
            //    sumid4=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim4=rs.getInt("sum(Quantity*Size1*Size2/1000)");
            //    sumsa4=rs.getInt("sum(3.1416*OD*Quantity*Size2/1000000)");
            //}
            rs.close();
            
            //valve
            String sql5="Select sum(Quantity*Size1*2), sum(3.1416*OD*Quantity/10000) From NewBom Where Item Like '"+temp5+"' And Item Like '"+tempa+"'";
            pst=conn.prepareStatement(sql5);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for valves");
            } else {
                sumid5=rs.getInt("sum(Quantity*Size1*2)");
                sumim5=0;
                sumsa5=rs.getInt("sum(3.1416*OD*Quantity/10000)");
            }
            //if(rs.next()){
            //    sumid5=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim5=rs.getInt("sum(Quantity*Size1*Size2/1000)");
            //    sumsa5=rs.getInt("sum(3.1416*OD*Quantity*Size2/1000000)");
            //}
            rs.close();
            
            //cap
            String sql6="Select sum(Quantity*Size1), sum(3.1416*OD*OD*Quantity/4000000) From NewBom Where Item Like '"+temp6+"'";
            pst=conn.prepareStatement(sql6);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for caps");
            } else {
                sumid6=rs.getInt("sum(Quantity*Size1)");
                sumim6=0;
                sumsa6=rs.getInt("sum(3.1416*OD*OD*Quantity/4000000)");
            }
            //if(rs.next()){
            //    sumid6=rs.getInt("sum(Quantity*Size1)");
            //    sumim6=0;
            //    sumsa6=rs.getInt("sum(3.1416*OD*OD*Quantity/4000000)");
            //}
            rs.close();
            
            //tee
            String sql7="Select sum(Quantity*Size1*3), sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/8000000) From NewBom Where Item Like '"+temp7+"'";
            pst=conn.prepareStatement(sql7);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for tees");
            } else {
                sumid7=rs.getInt("sum(Quantity*Size1*3)");
                sumim7=0;
                sumsa7=0;
              //sumsa7=rs.getInt("sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/8000000)");
            }
            //if(rs.next()){
            //    sumid7=rs.getInt("sum(Quantity*Size1*3)");
            //    sumim7=0;
            //    sumsa7=rs.getInt("sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/8000000)");
            //}
            rs.close();
            
            //Coupling
            String sql8="Select sum(Quantity*Size1*2) From NewBom Where Item Like '"+temp8+"' And Item Like '"+tempa+"'";
            pst=conn.prepareStatement(sql8);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for couplings");
            } else {
                sumid8=rs.getInt("sum(Quantity*Size1*2)");
                sumim8=0;
                sumsa8=0;
            }
            //if(rs.next()){
            //    sumid8=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim8=0;
            //    sumsa8=0;
            //}
            rs.close();
            
            //Union
            String sql9="Select sum(Quantity*Size1*2) From NewBom Where Item Like '"+temp9+"' And Item Like '"+tempa+"'";
            pst=conn.prepareStatement(sql9);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for unions");
            } else {
                sumid9=rs.getInt("sum(Quantity*Size1*2)");
                sumim9=0;
                sumsa9=0;
            }
            //if(rs.next()){
            //    sumid9=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim9=0;
            //    sumsa9=0;
            //}
            rs.close();
            
            //Reducer
            String sql10="Select sum(Quantity*Size1+Quantity*Size2), sum(3.1416*Quantity*OD*40*0.001/Size1) From NewBom Where Item Like '"+temp10+"'";
            pst=conn.prepareStatement(sql10);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for reducers");
            } else {
                sumid10=rs.getInt("sum(Quantity*Size1+Quantity*Size2)");
                sumim10=0;
                sumsa10=rs.getInt("sum(3.1416*Quantity*OD*40*0.001/Size1)");
            }
            //if(rs.next()){
            //    sumid10=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim10=0;
            //    sumsa10=rs.getInt("sum(3.1416*Quantity*OD*40/Size1)");
            //}
            rs.close();
            
            //elbow
            String sql11="Select sum(Quantity*Size1*2), sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/4000000) From NewBom Where Item Like '"+temp11+"'";
            pst=conn.prepareStatement(sql11);
            rs=pst.executeQuery();
            if (!rs.next() ) {
                System.out.println("no data for elbows");
            } else {
                sumid11=rs.getInt("sum(Quantity*Size1*2)");
                sumim11=0;
                sumsa11=rs.getInt("sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/4000000)");
            }
            //if(rs.next()){
            //    sumid11=rs.getInt("sum(Quantity*Size1*2)");
            //    sumim11=0;
            //    sumsa11=rs.getInt("sum(3.1416*3.1416*((1.5*25.4*Size1+OD/2)*(1.5*25.4*Size1+OD/2)-(1.5*25.4*Size1-OD/2)*(1.5*25.4*Size1-OD/2))*Quantity/4000000)");
            //}
            rs.close();
            
            int totalid=sumid0+sumid1+sumid2+sumid3+sumid4+sumid5+sumid6+sumid7+sumid8+sumid9+sumid10+sumid11;
            int totalim=sumim0+sumim1+sumim2+sumim3+sumim4+sumim5+sumim6+sumim7+sumim8+sumim9+sumim10+sumim11;
            int totalsa=sumsa0+sumsa1+sumsa2+sumsa3+sumsa4+sumsa5+sumsa6+sumsa7+sumsa8+sumsa9+sumsa10+sumsa11;

            int tmp = Integer.parseInt(cb_Radiography.getSelectedItem().toString());
            int tmp1 = Integer.parseInt(cb_DPT.getSelectedItem().toString());
            int tmp2 = Integer.parseInt(cb_SR.getSelectedItem().toString());
            int tmp3 = Integer.parseInt(cb_MPT.getSelectedItem().toString());
            int tmp4 = Integer.parseInt(cb_UFDT.getSelectedItem().toString());
            
            int radiography=tmp*totalid/100;
            int dpt=tmp1*totalid/100;
            int sr=tmp2*totalid/100;
            int mpt=tmp3*totalid/100;
            int ufdt=tmp4*totalid/100;
            lbl_Totalid.setText(String.valueOf(totalid));
            lbl_Totalim.setText(String.valueOf(totalim));
            lbl_Totalsa.setText(String.valueOf(totalsa));
            lbl_Radiography.setText(String.valueOf(radiography));
            lbl_DPT.setText(String.valueOf(dpt));
            lbl_SR.setText(String.valueOf(sr));
            lbl_MPT.setText(String.valueOf(mpt));
            lbl_UFDT.setText(String.valueOf(ufdt));
            
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        try{
            String value1=lbl_Radiography.getText();
            String value2=lbl_DPT.getText();
            String value3=lbl_Totalsa.getText();
            String value4=lbl_Totalim.getText();
            String value5=lbl_SR.getText();
            String value6=lbl_MPT.getText();
            String value7=lbl_UFDT.getText();
            String value8=lbl_Totalid.getText();
            String value9="0";
            String temp1="%RADIOGRAPHY%";
            String temp2="%PENETRANT%";
            String temp3="%PAINT%";
            String temp4="%HYDRO%";
            String temp5="%STRESS%";
            String temp6="%MAGNETIC%";
            String temp7="%UFDT%";
            String temp8="%WELD%";
            String temp9="%WELDER%";
            
            String sql1="Update NewBom Set Quantity="+value1+" Where Item Like '"+temp1+"'";
            pst =conn.prepareStatement(sql1);
            pst.execute();
            
            String sql2="Update NewBom Set Quantity="+value2+" Where Item Like '"+temp2+"'";
            pst =conn.prepareStatement(sql2);
            pst.execute();
            
            String sql3="Update NewBom Set Quantity="+value3+" Where Item Like '"+temp3+"'";
            pst =conn.prepareStatement(sql3);
            pst.execute();
            
            String sql4="Update NewBom Set Quantity="+value4+" Where Item Like '"+temp4+"'";
            pst =conn.prepareStatement(sql4);
            pst.execute();
            
            String sql5="Update NewBom Set Quantity="+value5+" Where Item Like '"+temp5+"'";
            pst =conn.prepareStatement(sql5);
            pst.execute();
            
            String sql6="Update NewBom Set Quantity="+value6+" Where Item Like '"+temp6+"'";
            pst =conn.prepareStatement(sql6);
            pst.execute();
            
            String sql7="Update NewBom Set Quantity="+value7+" Where Item Like '"+temp7+"'";
            pst =conn.prepareStatement(sql7);
            pst.execute();
            
            String sql8="Update NewBom Set Quantity="+value8+" Where Item Like '"+temp8+"'";
            pst =conn.prepareStatement(sql8);
            pst.execute();
            
            String sql9="Update NewBom Set Quantity="+value9+" Where Item Like '"+temp9+"'";
            pst =conn.prepareStatement(sql9);
            pst.execute();
            
            JOptionPane.showMessageDialog(null,"Data Updated for Welding, RT, DPT, MPT, UFDT, HT & Painting");
        }
        
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_NewBomTable();
        
    }//GEN-LAST:event_btn_CalculateActionPerformed

    private void btn_UpdateQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateQtyActionPerformed
        try{
            String value1=lbl_ID.getText();
            String value2=txt_ChangeItem.getText();
            String value3=txt_ChangeSize1.getText();
            String value4=txt_ChangeSize2.getText();
            String value5=txt_ChangeSchedule.getText();
            String value6=txt_ChangeRating.getText();
            String value7=txt_ChangeSpecs.getText();
            String value8=txt_ChangeQty.getText();
            String value9=txt_ChangeUnitrate.getText();
            String value10=txt_ChangeEsc.getText();
                    
            String sql="Update NewBom SET Item='"+value2+"', Size1='"+value3+"',Size2='"+value4+"', Schedule='"+value5+"', Rating='"+value6+"', Specifications='"+value7+"', Quantity='"+value8+"', UnitRate='"+value9+"', Escalation='"+value10+"' where ID='"+value1+"'";
            pst =conn.prepareStatement(sql);
            pst.execute();
            
            JOptionPane.showMessageDialog(null,"Item Updated");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_NewBomTable(); 
    }//GEN-LAST:event_btn_UpdateQtyActionPerformed

    private void chk_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_TIActionPerformed
        if(tni_indicator==0)
            tni_indicator=1;
        else
            tni_indicator=0;
    }//GEN-LAST:event_chk_TIActionPerformed

    private void txt_EscalationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_EscalationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_EscalationActionPerformed

    private void txt_ChangeSize2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ChangeSize2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ChangeSize2ActionPerformed

    public void close(){
        WindowEvent winClosingEvent=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jf_NewBom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jf_NewBom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jf_NewBom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jf_NewBom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jf_NewBom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Calculate;
    private javax.swing.JButton btn_Cleardata;
    private javax.swing.JButton btn_DeleteSelection;
    private javax.swing.JButton btn_ExportExcel;
    private javax.swing.JButton btn_OpenFile;
    private javax.swing.JButton btn_Saveclose;
    private javax.swing.JButton btn_UpdateQty;
    private javax.swing.JComboBox cb_DPT;
    private javax.swing.JComboBox cb_MPT;
    private javax.swing.JComboBox cb_Radiography;
    private javax.swing.JComboBox cb_SR;
    private javax.swing.JComboBox cb_UFDT;
    private javax.swing.JCheckBox chk_TI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_DPT;
    private javax.swing.JLabel lbl_ID;
    private javax.swing.JLabel lbl_MPT;
    private javax.swing.JLabel lbl_Radiography;
    private javax.swing.JLabel lbl_SR;
    private javax.swing.JLabel lbl_Totalid;
    private javax.swing.JLabel lbl_Totalim;
    private javax.swing.JLabel lbl_Totalsa;
    private javax.swing.JLabel lbl_UFDT;
    private javax.swing.JMenuItem menu_About;
    private javax.swing.JMenuItem menu_Credits;
    private javax.swing.JMenuItem menu_Exit;
    private javax.swing.JMenuItem menu_Helpdoc;
    private javax.swing.JMenuItem menu_Selectmaterial;
    private javax.swing.JPanel pnl_TextID;
    private javax.swing.JTable table_NewBomTable;
    private javax.swing.JTextField txt_ChangeEsc;
    private javax.swing.JTextField txt_ChangeItem;
    private javax.swing.JTextField txt_ChangeQty;
    private javax.swing.JTextField txt_ChangeRating;
    private javax.swing.JTextField txt_ChangeSchedule;
    private javax.swing.JTextField txt_ChangeSize1;
    private javax.swing.JTextField txt_ChangeSize2;
    private javax.swing.JTextField txt_ChangeSpecs;
    private javax.swing.JTextField txt_ChangeUnitrate;
    private javax.swing.JTextField txt_Elbowid;
    private javax.swing.JTextField txt_Escalation;
    private javax.swing.JTextField txt_Flangeid;
    private javax.swing.JTextField txt_IDField;
    private javax.swing.JTextField txt_Path;
    private javax.swing.JTextField txt_Pipeid;
    private javax.swing.JTextField txt_ProjectTitle;
    private javax.swing.JTextField txt_TaxED;
    private javax.swing.JTextField txt_TaxFI;
    private javax.swing.JTextField txt_TaxPF;
    private javax.swing.JTextField txt_TaxST;
    private javax.swing.JTextField txt_TaxSeT;
    private javax.swing.JTextField txt_Teeid;
    // End of variables declaration//GEN-END:variables

private int tni_indicator=0;

}
