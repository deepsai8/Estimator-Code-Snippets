/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 31950280
 */
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.Calendar;
import java.awt.Component;
import java.util.GregorianCalendar;
import java.text.*;
import java.awt.print.*;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
public class jf_Estimator extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    jf_NewBom nbom=new jf_NewBom();
    /**
     * Creates new form jf_Estimator
     */
    public jf_Estimator() {
        super("Estimation Data");
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        conn=JConnection.ConnecrDb();
        Update_Table();
        //resizeColumnWidth(table_EstData);
        
        
    }
    
    public void Update_Table() {
    
    try{
    String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData";
    pst =conn.prepareStatement(sql);
    rs=pst.executeQuery();
    table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
    table_Estimationdata.setAutoCreateRowSorter(true);
    //table_EstData.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
    table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
    table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
    table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
    table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
    table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
    table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
    table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
    table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
    table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
    table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
    table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
    table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
    //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
    
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }
    finally {
            try{
                rs.close();
                pst.close();
                //conn.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);                
            }
    }
    jPanel3.setVisible(false); //visibility of the txt2 in jPanel3
}

public void resizeColumnWidth(JTable table) {
    final TableColumnModel columnModel = table.getColumnModel();
    for (int column = 0; column < table.getColumnCount(); column++) {
        int width = 50; // Min width
        for (int row = 0; row < table.getRowCount(); row++) {
            TableCellRenderer renderer = table.getCellRenderer(row, column);
            Component comp = table.prepareRenderer(renderer, row, column);
            width = Math.max(comp.getPreferredSize().width, width);
        }
        columnModel.getColumn(column).setPreferredWidth(width);
    }
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btn_Clearfilter = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txt_Reference = new javax.swing.JTextField();
        txt_Specifications = new javax.swing.JTextField();
        txt_Type = new javax.swing.JTextField();
        txt_Item = new javax.swing.JTextField();
        txt_Schedule = new javax.swing.JTextField();
        txt_Rating = new javax.swing.JTextField();
        txt_Id = new javax.swing.JTextField();
        txt_Size1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Estimationdata = new javax.swing.JTable();
        txt_Size2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btn_Addtobom = new javax.swing.JButton();
        txt2_Quantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt2_Itemesc = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txt2_Id = new javax.swing.JTextField();
        txt2_Type = new javax.swing.JTextField();
        txt2_Item = new javax.swing.JTextField();
        txt2_Size1 = new javax.swing.JTextField();
        txt2_Schedule = new javax.swing.JTextField();
        txt2_Rating = new javax.swing.JTextField();
        txt2_Specs = new javax.swing.JTextField();
        txt2_Reference = new javax.swing.JTextField();
        txt2_Refdate = new javax.swing.JTextField();
        txt2_Uom = new javax.swing.JTextField();
        txt2_Unitrate = new javax.swing.JTextField();
        txt2_Size2 = new javax.swing.JTextField();
        txt2_Od = new javax.swing.JTextField();
        txt2_Refline = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_Exit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_Helpdoc = new javax.swing.JMenuItem();
        menu_About = new javax.swing.JMenuItem();
        menu_Credits = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 500));

        jToolBar1.setRollover(true);

        btn_Clearfilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filter.jpg"))); // NOI18N
        btn_Clearfilter.setText("Clear Filters");
        btn_Clearfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ClearfilterActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_Clearfilter);

        btn_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel.png"))); // NOI18N
        btn_Exit.setText("Exit");
        btn_Exit.setFocusable(false);
        btn_Exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Exit.setPreferredSize(new java.awt.Dimension(25, 40));
        btn_Exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_Exit);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CREATE YOUR BOM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(51, 102, 255))); // NOI18N
        jPanel1.setAutoscrolls(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(1240, 320));

        txt_Reference.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ReferenceKeyReleased(evt);
            }
        });

        txt_Specifications.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SpecificationsKeyReleased(evt);
            }
        });

        txt_Type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_TypeKeyReleased(evt);
            }
        });

        txt_Item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ItemKeyReleased(evt);
            }
        });

        txt_Schedule.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ScheduleKeyReleased(evt);
            }
        });

        txt_Rating.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_RatingKeyReleased(evt);
            }
        });

        txt_Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_IdKeyReleased(evt);
            }
        });

        txt_Size1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_Size1KeyReleased(evt);
            }
        });

        table_Estimationdata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Type", "Item", "Size1", "Size2", "Schedule", "Rating", "Specs", "Reference", "RefDate", "Uom", "Unit Rate"
            }
        ));
        table_Estimationdata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_EstimationdataMouseClicked(evt);
            }
        });
        table_Estimationdata.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_EstimationdataKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_Estimationdata);

        txt_Size2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_Size2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Size1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Size2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Schedule, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Specifications, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_Reference, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Size1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Schedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Specifications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Reference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Size2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Commands", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btn_Addtobom.setText("Add to BOM");
        btn_Addtobom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddtobomActionPerformed(evt);
            }
        });

        jLabel1.setText("Quantity");

        jLabel3.setText("Escalation (%)");

        txt2_Itemesc.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt2_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt2_Itemesc, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btn_Addtobom)
                .addContainerGap(362, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Addtobom)
                    .addComponent(txt2_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txt2_Itemesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt2_Id, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(txt2_Type, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt2_Item, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt2_Rating, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(txt2_Size1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt2_Size2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt2_Refdate)
                    .addComponent(txt2_Reference, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt2_Specs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt2_Uom)
                    .addComponent(txt2_Unitrate)
                    .addComponent(txt2_Schedule, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt2_Od, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(txt2_Refline))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt2_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Size1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Specs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Uom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Od, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt2_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Reference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Unitrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Size2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Refline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt2_Item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Refdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2_Schedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("WELCOME TO DS COST ESTIMATION SOFTWARE");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 255, 255)));

        jMenu1.setText("File");

        menu_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menu_Exit.setText("Exit");
        menu_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_ExitActionPerformed(evt);
            }
        });
        jMenu1.add(menu_Exit);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Help");

        menu_Helpdoc.setText("Help Doc");
        menu_Helpdoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_HelpdocActionPerformed(evt);
            }
        });
        jMenu3.add(menu_Helpdoc);

        menu_About.setText("About");
        menu_About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_AboutActionPerformed(evt);
            }
        });
        jMenu3.add(menu_About);

        menu_Credits.setText("Credits");
        menu_Credits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_CreditsActionPerformed(evt);
            }
        });
        jMenu3.add(menu_Credits);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1232, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_IdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_IdKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, RefLine, Uom, UnitRate from EstimationData Where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_IdKeyReleased

    private void txt_TypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TypeKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_TypeKeyReleased

    private void txt_ItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ItemKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_ItemKeyReleased

    private void txt_Size1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_Size1KeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_Size1KeyReleased

    private void txt_ScheduleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ScheduleKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_ScheduleKeyReleased

    private void txt_RatingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_RatingKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_RatingKeyReleased

    private void txt_SpecificationsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SpecificationsKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_SpecificationsKeyReleased

    private void txt_ReferenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ReferenceKeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_ReferenceKeyReleased

    private void table_EstimationdataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_EstimationdataMouseClicked
        try{
            int row = table_Estimationdata.getSelectedRow();
            String Table_Click=(table_Estimationdata.getModel().getValueAt(row, 0).toString());
            String sql="select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, OD from EstimationData where ID='"+Table_Click+"' ";            
            pst =conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                String add1=rs.getString("id");
                txt2_Id.setText(add1);
                String add2=rs.getString("Type");
                txt2_Type.setText(add2);
                String add3=rs.getString("Item");
                txt2_Item.setText(add3);
                String add4=rs.getString("Size1");
                txt2_Size1.setText(add4);
                String add4b=rs.getString("Size2");
                txt2_Size2.setText(add4b);
                String add5=rs.getString("Schedule");
                txt2_Schedule.setText(add5);
                String add6=rs.getString("Rating");
                txt2_Rating.setText(add6);
                String add7=rs.getString("Specifications");
                txt2_Specs.setText(add7);
                String add8=rs.getString("Reference");
                txt2_Reference.setText(add8);
                String add9=rs.getString("RefDate");
                txt2_Refdate.setText(add9);
                String add10=rs.getString("Uom");
                txt2_Uom.setText(add10);
                String add11=rs.getString("UnitRate");
                txt2_Unitrate.setText(add11);
                String add12=rs.getString("OD");
                txt2_Od.setText(add12);
                String add13=rs.getString("RefLine");
                txt2_Refline.setText(add13);
                txt2_Quantity.setText("0");
                txt2_Itemesc.setText("0");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        finally {
            try{
                rs.close();
                pst.close();
                //conn.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);                
            }
        }
    }//GEN-LAST:event_table_EstimationdataMouseClicked

    private void table_EstimationdataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_EstimationdataKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_DOWN ||evt.getKeyCode()==KeyEvent.VK_UP){
           
            try{
                int row = table_Estimationdata.getSelectedRow();
                String Table_Click=(table_Estimationdata.getModel().getValueAt(row, 0).toString());
                String sql="select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate, OD from EstimationData where ID='"+Table_Click+"' ";            
                pst =conn.prepareStatement(sql);
                rs=pst.executeQuery();
            
                if(rs.next()){
                    String add1=rs.getString("ID");
                    txt2_Id.setText(add1);
                    String add2=rs.getString("Type");
                    txt2_Type.setText(add2);
                    String add3=rs.getString("Item");
                    txt2_Item.setText(add3);
                    String add4=rs.getString("Size1");
                    txt2_Size1.setText(add4);
                    String add4b=rs.getString("Size2");
                    txt2_Size2.setText(add4b);
                    String add5=rs.getString("Schedule");
                    txt2_Schedule.setText(add5);
                    String add6=rs.getString("Rating");
                    txt2_Rating.setText(add6);
                    String add7=rs.getString("Specifications");
                    txt2_Specs.setText(add7);
                    String add8=rs.getString("Reference");
                    txt2_Reference.setText(add8);
                    String add9=rs.getString("RefDate");
                    txt2_Refdate.setText(add9);
                    String add10=rs.getString("Uom");
                    txt2_Uom.setText(add10);
                    String add11=rs.getString("UnitRate");
                    txt2_Unitrate.setText(add11);
                    String add12=rs.getString("OD");
                    txt2_Od.setText(add12);
                    String add13=rs.getString("RefLine");
                    txt2_Refline.setText(add13);
                    txt2_Quantity.setText("0");
                    txt2_Itemesc.setText("0");
                    
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
            }
        }
    }//GEN-LAST:event_table_EstimationdataKeyReleased

    private void btn_AddtobomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddtobomActionPerformed
        try{
            String sql="Insert into NewBom(ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, Uom, UnitRate, Quantity, OD, RefLine, Escalation) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            pst =conn.prepareStatement(sql);
            pst.setString(1,txt2_Id.getText());
            pst.setString(2,txt2_Type.getText());
            pst.setString(3,txt2_Item.getText());
            pst.setString(4,txt2_Size1.getText());
            pst.setString(5,txt2_Size2.getText());
            pst.setString(6,txt2_Schedule.getText());
            pst.setString(7,txt2_Rating.getText());
            pst.setString(8,txt2_Specs.getText());
            pst.setString(9,txt2_Reference.getText());
            pst.setString(10,txt2_Refdate.getText());
            pst.setString(11,txt2_Uom.getText());
            pst.setString(12,txt2_Unitrate.getText());
            pst.setString(13,txt2_Quantity.getText());
            pst.setString(14,txt2_Od.getText());
            pst.setString(15,txt2_Refline.getText());
            pst.setString(16,txt2_Itemesc.getText());
            
            pst.execute();
            
            //JOptionPane.showMessageDialog(null,"Data Saved");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        finally {
            try{
                rs.close();
                pst.close();
                //conn.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);                
            }
        }
        nbom.setVisible(true);
        nbom.Update_NewBomTable();
    }//GEN-LAST:event_btn_AddtobomActionPerformed

    private void btn_ClearfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ClearfilterActionPerformed
            txt_Id.setText("");
            txt_Type.setText("");
            txt_Item.setText("");
            txt_Size1.setText("");
            txt_Size2.setText("");
            txt_Schedule.setText("");
            txt_Rating.setText("");
            txt_Specifications.setText("");
            txt_Reference.setText("");
            txt2_Quantity.setText("");
            txt2_Itemesc.setText("");
            txt2_Od.setText("");
            Update_Table();
    }//GEN-LAST:event_btn_ClearfilterActionPerformed

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        close();
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void menu_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_ExitActionPerformed
        close();
    }//GEN-LAST:event_menu_ExitActionPerformed

    private void menu_AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_AboutActionPerformed
        jf_About about = new jf_About();
        about.setVisible(true);
    }//GEN-LAST:event_menu_AboutActionPerformed

    private void menu_CreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_CreditsActionPerformed
        jf_Credits credits = new jf_Credits();
        credits.setVisible(true);
    }//GEN-LAST:event_menu_CreditsActionPerformed

    private void menu_HelpdocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_HelpdocActionPerformed
        try{
           Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\31950280\\Documents\\NetBeansProjects\\Estimation\\resources\\help.pdf");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_menu_HelpdocActionPerformed

    private void txt_Size2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_Size2KeyReleased
        try{
            //String selection=(String) cb_selection.getSelectedItem();
            String temp1="%"+txt_Id.getText()+"%";
            String temp2="%"+txt_Type.getText()+"%";
            String temp3="%"+txt_Item.getText()+"%";
            String temp4="%"+txt_Size1.getText()+"%";
            String temp4b="%"+txt_Size2.getText()+"%";
            String temp5="%"+txt_Schedule.getText()+"%";
            String temp6="%"+txt_Rating.getText()+"%";
            String temp7="%"+txt_Specifications.getText()+"%";
            String temp8="%"+txt_Reference.getText()+"%";
            
            String sql = "select ID, Type, Item, Size1, Size2, Schedule, Rating, Specifications, Reference, RefDate, RefLine, Uom, UnitRate from EstimationData where ID like'"+temp1+"' and Type like'"+temp2+"' and Item like'"+temp3+"' and Size1 like'"+temp4+"' and Size2 like'"+temp4b+"' and Schedule like'"+temp5+"' and Rating like'"+temp6+"' and Specifications like'"+temp7+"' and Reference like'"+temp8+"' order by ID";
            pst =conn.prepareStatement(sql);
            
            rs=pst.executeQuery();
            table_Estimationdata.setModel(DbUtils.resultSetToTableModel(rs));
            table_Estimationdata.setAutoCreateRowSorter(true);
            //table_Estimationdata.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            table_Estimationdata.getColumnModel().getColumn(0).setPreferredWidth(59); //id
            table_Estimationdata.getColumnModel().getColumn(1).setPreferredWidth(65); //type
            table_Estimationdata.getColumnModel().getColumn(2).setPreferredWidth(210); //item
            table_Estimationdata.getColumnModel().getColumn(3).setPreferredWidth(55); //size1
            table_Estimationdata.getColumnModel().getColumn(4).setPreferredWidth(50); //size2
            table_Estimationdata.getColumnModel().getColumn(5).setPreferredWidth(60); //schedule
            table_Estimationdata.getColumnModel().getColumn(6).setPreferredWidth(50); //rating
            table_Estimationdata.getColumnModel().getColumn(7).setPreferredWidth(310); //specs
            table_Estimationdata.getColumnModel().getColumn(8).setPreferredWidth(125); //ref
            table_Estimationdata.getColumnModel().getColumn(9).setPreferredWidth(80); //refdate
            table_Estimationdata.getColumnModel().getColumn(10).setPreferredWidth(50); //refline
            table_Estimationdata.getColumnModel().getColumn(11).setPreferredWidth(60); //uom
            table_Estimationdata.getColumnModel().getColumn(12).setPreferredWidth(70); //unitrate
            //table_Estimationdata.getColumnModel().getColumn(13).setPreferredWidth(40); //OD
            
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        
            finally {
                try{
                    rs.close();
                    pst.close();
                    //conn.close();
                }
                catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);                
                }
        }
    }//GEN-LAST:event_txt_Size2KeyReleased

    public void close(){
        try{
            rs.close();
            pst.close();
            conn.close();
            nbom.conn.close();
            nbom.close();
            FileEncryptor newfe=new FileEncryptor();
            String[] args = {};
            newfe.main(args);
            //This following part is now included in File Encryptor
            //File estimations=new File("Estimation.s");
            //estimations.delete();
    	}catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
    	}
            
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WindowEvent winClosingEvent=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jf_Estimator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jf_Estimator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jf_Estimator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jf_Estimator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jf_Estimator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Addtobom;
    private javax.swing.JButton btn_Clearfilter;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem menu_About;
    private javax.swing.JMenuItem menu_Credits;
    private javax.swing.JMenuItem menu_Exit;
    private javax.swing.JMenuItem menu_Helpdoc;
    private javax.swing.JTable table_Estimationdata;
    private javax.swing.JTextField txt2_Id;
    private javax.swing.JTextField txt2_Item;
    private javax.swing.JTextField txt2_Itemesc;
    private javax.swing.JTextField txt2_Od;
    private javax.swing.JTextField txt2_Quantity;
    private javax.swing.JTextField txt2_Rating;
    private javax.swing.JTextField txt2_Refdate;
    private javax.swing.JTextField txt2_Reference;
    private javax.swing.JTextField txt2_Refline;
    private javax.swing.JTextField txt2_Schedule;
    private javax.swing.JTextField txt2_Size1;
    private javax.swing.JTextField txt2_Size2;
    private javax.swing.JTextField txt2_Specs;
    private javax.swing.JTextField txt2_Type;
    private javax.swing.JTextField txt2_Unitrate;
    private javax.swing.JTextField txt2_Uom;
    private javax.swing.JTextField txt_Id;
    private javax.swing.JTextField txt_Item;
    private javax.swing.JTextField txt_Rating;
    private javax.swing.JTextField txt_Reference;
    private javax.swing.JTextField txt_Schedule;
    private javax.swing.JTextField txt_Size1;
    private javax.swing.JTextField txt_Size2;
    private javax.swing.JTextField txt_Specifications;
    private javax.swing.JTextField txt_Type;
    // End of variables declaration//GEN-END:variables


}


